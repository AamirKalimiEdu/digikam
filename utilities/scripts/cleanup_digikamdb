#!/bin/sh

# Author: Andi Clemens, <andi dot clemens at gmx dot net>
#
# Description:
#
# This script will read in the digiKam configuration file to determine the
# database location. It will then make sure that digiKam is not running and
# call "sqlite3 DATABASE 'VACUUM;" on the database, to clean up and optimize
# the tables.
# This will often lead to great performance gain and a smaller database file
# size.

# -----------------------------------------------------------------------------
# CONST VARIABLES
# -----------------------------------------------------------------------------

NAME="Cleanup Databases"
VERSION="1.0"

USERNAME=$(whoami)

DIGIKAM_NAME="digiKam"
DIGIKAM_VERSION=$(digikam -v | grep -i digikam | cut -d: -f2 | sed 's/ //g')

CONFIGGROUP="Album Settings"
DATABASEKEY="Database File Path"
CONFIGFILE="digikamrc"
DATABASEDIR=$(kreadconfig --file "$CONFIGFILE" --group "$CONFIGGROUP" --key "$DATABASEKEY")

HEADER_OFFSET=20
MIN_ARGS=0

OUTPUT_LOCATION="Location"
OUTPUT_DATABASE="Database"

# -----------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------

# $1: char
# $2: count (optional)
repeat_char()
{
    for i in $(seq ${2:-$HEADER_OFFSET}); do
        echo -n "$1"
    done
}

# $*: string
pretty_header()
{
    # use an offset to center text (default = $HEADER_OFFSET)
    offset=$(repeat_char " ")
    offset_length=$(expr $(expr length "$offset") \* 2)

    # calculate length and print header
    str_length=$(expr length "$*")
    length=$(expr $str_length + $offset_length)

    # delimiter line
    delimiter=$(repeat_char "-" $length)

    echo $delimiter
    echo "${offset}$*${offset}"
    echo $delimiter
}

checkForRunningProgram()
{
    proc="$(ps aux | grep $USERNAME | grep -v $0 | grep -w digikam | grep -v grep)"
    if [ "$proc" != "" ]
    then
        echo "Please shutdown $DIGIKAM_NAME before running this script."
        return 1
    fi
    return 0
}

# -----------------------------------------------------------------------------
# MAIN
# -----------------------------------------------------------------------------

if [ $# -gt $MIN_ARGS ]; then
    echo "Usage: $(basename $0) options"
    exit 1
fi

checkForRunningProgram
if [ $? = 1 ]; then
    exit 1
fi

pretty_header "$NAME v$VERSION ($DIGIKAM_NAME $DIGIKAM_VERSION)"

# backup current working dir
curdir=$(pwd)

# try to enter the database directory
cd $DATABASEDIR 2&> /dev/null
if [ $? = 0 ]
then
    db_out="$OUTPUT_DATABASE:"
    echo -e "$OUTPUT_LOCATION:\t$(pwd)"
    for db in $(find . -type f -name 'digikam*.db' -print)
    do
        echo -ne "${db_out:-"\\t"}\t$(basename $db) ... "
        sqlite3 $db "VACUUM;"
        if [ $? = 0 ]
        then
            echo "done!"
        else
            echo "failed!"
            echo "sqlite3 was not able to cleanup the database."
        fi
        unset db_out
    done
    db_out="$OUTPUT_DATABASE:"
    echo -e "\n=> Finished";
else
    echo -e "\nI was not able to enter the database folder.\n"
    echo "Make sure that the variable '$DATABASEKEY' in your 'digikamrc' config file"
    echo "is set correctly and that you have permissions to access the database folder."
fi

cd $curdir
